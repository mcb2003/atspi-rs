// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files
// DO NOT EDIT

use std::ffi::CStr;

#[doc(alias = "ATSPI_DBUS_INTERFACE_ACCESSIBLE")]
pub static DBUS_INTERFACE_ACCESSIBLE: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_ACCESSIBLE).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_ACTION")]
pub static DBUS_INTERFACE_ACTION: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_ACTION).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_APPLICATION")]
pub static DBUS_INTERFACE_APPLICATION: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_APPLICATION).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_CACHE")]
pub static DBUS_INTERFACE_CACHE: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_CACHE).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_COLLECTION")]
pub static DBUS_INTERFACE_COLLECTION: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_COLLECTION).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_COMPONENT")]
pub static DBUS_INTERFACE_COMPONENT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_COMPONENT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_DEC")]
pub static DBUS_INTERFACE_DEC: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_DEC).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_DEVICE_EVENT_LISTENER")]
pub static DBUS_INTERFACE_DEVICE_EVENT_LISTENER: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_DEVICE_EVENT_LISTENER).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_DOCUMENT")]
pub static DBUS_INTERFACE_DOCUMENT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_DOCUMENT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_EDITABLE_TEXT")]
pub static DBUS_INTERFACE_EDITABLE_TEXT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_EDITABLE_TEXT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_EVENT_KEYBOARD")]
pub static DBUS_INTERFACE_EVENT_KEYBOARD: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_EVENT_KEYBOARD).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_EVENT_MOUSE")]
pub static DBUS_INTERFACE_EVENT_MOUSE: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_EVENT_MOUSE).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_EVENT_OBJECT")]
pub static DBUS_INTERFACE_EVENT_OBJECT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_EVENT_OBJECT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_EVENT_SCREEN_READER")]
pub static DBUS_INTERFACE_EVENT_SCREEN_READER: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_EVENT_SCREEN_READER).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_HYPERLINK")]
pub static DBUS_INTERFACE_HYPERLINK: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_HYPERLINK).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_HYPERTEXT")]
pub static DBUS_INTERFACE_HYPERTEXT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_HYPERTEXT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_IMAGE")]
pub static DBUS_INTERFACE_IMAGE: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_IMAGE).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_REGISTRY")]
pub static DBUS_INTERFACE_REGISTRY: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_REGISTRY).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_SELECTION")]
pub static DBUS_INTERFACE_SELECTION: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_SELECTION).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_SOCKET")]
pub static DBUS_INTERFACE_SOCKET: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_SOCKET).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_TABLE")]
pub static DBUS_INTERFACE_TABLE: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_TABLE).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_TABLE_CELL")]
pub static DBUS_INTERFACE_TABLE_CELL: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_TABLE_CELL).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_TEXT")]
pub static DBUS_INTERFACE_TEXT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_TEXT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_INTERFACE_VALUE")]
pub static DBUS_INTERFACE_VALUE: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_INTERFACE_VALUE).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_NAME_REGISTRY")]
pub static DBUS_NAME_REGISTRY: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_NAME_REGISTRY).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_PATH_DEC")]
pub static DBUS_PATH_DEC: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_PATH_DEC).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_PATH_NULL")]
pub static DBUS_PATH_NULL: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_PATH_NULL).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_PATH_REGISTRY")]
pub static DBUS_PATH_REGISTRY: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_PATH_REGISTRY).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_PATH_ROOT")]
pub static DBUS_PATH_ROOT: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_PATH_ROOT).to_str().unwrap()});
#[doc(alias = "ATSPI_DBUS_PATH_SCREEN_READER")]
pub static DBUS_PATH_SCREEN_READER: once_cell::sync::Lazy<&'static str> = once_cell::sync::Lazy::new(|| unsafe{CStr::from_ptr(ffi::ATSPI_DBUS_PATH_SCREEN_READER).to_str().unwrap()});
